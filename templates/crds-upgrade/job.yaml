{{- if .Values.crdUpgradeJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "prometheus-operator.crdUpgradeJob.name" . }}
  namespace: {{ template "prometheus-operator.namespace" . }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    {{- with .Values.crdUpgradeJob.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  labels:
    {{- include "prometheus-operator.crdUpgradeJob.labels" . | nindent 4 }}
    {{- with .Values.crdUpgradeJob.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  backoffLimit: 3
  template:
    metadata:
      {{- with .Values.crdUpgradeJob.podLabels }}
      labels:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.crdUpgradeJob.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- include "prometheus-operator.imagePullSecrets" . | indent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prometheus-operator.crdUpgradeJob.serviceAccountName" . }}
      initContainers:
        - name: busybox
          {{- $busyboxRegistry := .Values.global.imageRegistry | default .Values.crdUpgradeJob.image.busybox.registry -}}
          {{- if .Values.crdUpgradeJob.image.sha }}
          image: "{{ $busyboxRegistry }}/{{ .Values.crdUpgradeJob.image.busybox.repository }}:{{ .Values.crdUpgradeJob.image.busybox.tag }}@sha256:{{ .Values.crdUpgradeJob.image.busybox.sha }}"
          {{- else }}
          image: "{{ $busyboxRegistry }}/{{ .Values.crdUpgradeJob.image.busybox.repository }}:{{ .Values.crdUpgradeJob.image.busybox.tag }}"
          {{- end }}
          imagePullPolicy: "{{ .Values.crdUpgradeJob.image.busybox.pullPolicy }}"
          workingDir: /tmp/
          command:
            - sh
          args:
            - -c
            - | 
              ARCH=$(uname -m | sed s/aarch64/arm64/ | sed s/x86_64/amd64/)
              wget -O /bin/jq https://github.com/jqlang/jq/releases/download/jq-$JQ_VERSION/jq-linux-$ARCH
              chmod +x /bin/jq
              curl -L \
                -H "Accept: application/vnd.github+json" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
            {{- if or .Values.crdUpgradeJob.ghToken .Values.crdUpgradeJob.ghTokenExistingSecret }}
                -H "Authorization: Bearer <YOUR-TOKEN>" \
            {{- end }}
                https://api.github.com/repos/$CRD_SOURCE_REPO/contents/PATH
          {{- with .Values.crdUpgradeJob.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.crdUpgradeJob.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /crds/
              name: crds
            - mountPath: /tmp/
              name: tmp
            {{- with .Values.crdUpgradeJob.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.crdUpgradeJob.env }}
          env:
            - name: JQ_VERSION
              value: {{- .Values.crdUpgradeJob.jqVersion -}}
            {{- if .Values.crdUpgradeJob.ghToken }}
            - name: GH_TOKEN
              value: {{- .Values.crdUpgradeJob.ghToken -}}
            {{- else if .Values.crdUpgradeJob.ghTokenExistingSecret }}
            - name: GH_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: {{- .Values.crdUpgradeJob.ghTokenExistingSecret.name -}}
                    key: {{- .Values.crdUpgradeJob.ghTokenExistingSecret.key -}}
            {{- end }}
            - name: CRD_SOURCE_REPO
              value: {{- .Values.crdUpgradeJob.crdSource.repo | default "hobbit44/prometheus-operator" -}}
            - name: CRD_SOURCE_VERSION
              value: {{- .Values.crdUpgradeJob.crdSource.version | default .Chart.Version -}}
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
      containers:
        - name: kubectl
          {{- $kubectlRegistry := .Values.global.imageRegistry | default .Values.crdUpgradeJob.image.kubectl.registry -}}
          {{- $defaultKubernetesVersion := regexFind "v\\d+\\.\\d+\\.\\d+" .Capabilities.KubeVersion.Version }}
          {{- if .Values.crdUpgradeJob.image.kubectl.sha }}
          image: "{{ $kubectlRegistry }}/{{ .Values.crdUpgradeJob.image.kubectl.repository }}:{{ .Values.crdUpgradeJob.image.kubectl.tag | default $defaultKubernetesVersion }}@sha256:{{ .Values.crdUpgradeJob.image.kubectl.sha }}"
          {{- else }}
          image: "{{ $kubectlRegistry }}/{{ .Values.crdUpgradeJob.image.kubectl.repository }}:{{ .Values.crdUpgradeJob.image.kubectl.tag | default $defaultKubernetesVersion }}"
          {{- end }}
          imagePullPolicy: "{{ .Values.crdUpgradeJob.image.kubectl.pullPolicy }}"
          command:
            - kubectl
          args:
            - apply
            - --server-side
            {{- if .Values.crdUpgradeJob.forceConflicts }}
            - --force-conflicts
            {{- end }}
            - --filename
            - /tmp/crds.yaml
          {{- with .Values.crdUpgradeJob.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.crdUpgradeJob.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /tmp/
              name: tmp
            {{- with .Values.crdUpgradeJob.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.crdUpgradeJob.env }}
          env:
            {{- range $key, $value := . }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: crds
          configMap:
            name: {{ template "prometheus-operator.crdUpgradeJob.name" . }}
        {{- with .Values.crdUpgradeJob.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      restartPolicy: OnFailure
      {{- with .Values.crdUpgradeJob.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.crdUpgradeJob.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.crdUpgradeJob.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.crdUpgradeJob.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.crdUpgradeJob.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
